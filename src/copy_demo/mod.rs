// cargo doc --open 跳转浏览器，打开文档

// 原生类型，包括函数、不可变引用和裸指针实现了 Copy
// 数组和元组，如果其内部的数据结构实现了 Copy，那么它们也实现了 Copy
// 可变引用没有实现 Copy
// 非固定大小的数据结构，没有实现 Copy

// https://doc.rust-lang.org/std/marker/trait.Copy.html
// 官方文档中包含了 Rust 标准库中实现 Copy trait 的所有数据结构。

// 所有权：一个值只能被一个变量所拥有，且同一时刻只能有一个所有者，当所有者离开作用域，其拥有的值被丢弃，内存得到释放。
// Move 语义：赋值或者传参会导致值 Move，所有权被转移，一旦所有权转移，之前的变量就不能访问。
// Copy 语义：如果值实现了 Copy trait，那么赋值或传参会使用 Copy 语义，相应的值会被按位拷贝（浅拷贝），产生新的值。